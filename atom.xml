<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[刘浩的博客]]></title>
  <link href="http://liuhaoxiu.github.io/atom.xml" rel="self"/>
  <link href="http://liuhaoxiu.github.io/"/>
  <updated>2016-07-12T17:30:10+08:00</updated>
  <id>http://liuhaoxiu.github.io/</id>
  <author>
    <name><![CDATA[刘浩]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Jenkins+fastlane持续集成]]></title>
    <link href="http://liuhaoxiu.github.io/blog/2016/07/12/jenkins-plus-fastlanechi-xu-ji-cheng/"/>
    <updated>2016-07-12T16:04:39+08:00</updated>
    <id>http://liuhaoxiu.github.io/blog/2016/07/12/jenkins-plus-fastlanechi-xu-ji-cheng</id>
    <content type="html"><![CDATA[<h1>iOS持续集成</h1>

<p>用Jenkins配置job,在合适的时机自动触发从git上拉取最新代码、自动构建、自动运行Test最后通过slack通过发送通知形式把结果反馈给team成员。</p>

<h2>安装工具</h2>

<ol>
<li>更新brew包管理工具
$ sudo brew update</li>
<li>安装jenkins
$ sudo brew install jenkins</li>
<li>安装fastlane
$ sudo gem install fastlane</li>
<li>安装fir-cli
$ sudo gem install fir-cli</li>
</ol>


<p>brew error
You can use brew with sudo, but only if the brew executable is owned by root.
However, this is both not recommended and completely unsupported so do so at
your own risk.
解决
$ sudo chown -R root /usr/local
参考：<a href="http://raiko.in/tech/homebrew-cant-sudo/"></a>
<a href="http://lyo.is-programmer.com/posts/39956.html"></a></p>

<p>根证书过期，下载重新安装:
<a href="https://developer.apple.com/certificationauthority/AppleWWDRCA.cer">根证书下载</a></p>

<h2>fastlane自动构建、自动测试等等</h2>

<ul>
<li>cd [your_project_folder]</li>
<li>fastlane init</li>
<li>Follow the setup assistant, which will set up fastlane for you</li>
<li>Edit Fastfile
<code>``
fastlane_version "1.81.0"
default_platform :ios
platform :ios do
before_all do
   ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  #cocoapods
  #increment_build_number
  cocoaPods
  xcodebuild(workspace: "LHAlertCustomViewDevApp.xcworkspace",scheme: "LHAlertCustomViewDevApp",sdk: "iphonesimulator",destination: "platform=iOS Simulator,name=iPhone 6s")
  #gym(workspace: "LHAlertCustomViewDevApp.xcworkspace")
end
desc "Runs all the tests"
lane :test do
  xctest(scheme: "LHAlertCustomViewDevApp",destination: "platform=iOS Simulator,name=iPhone 6s",
    reports: [
      {
        report: "html",
        output: "build/reports/unit-tests.html"
      },
      {
        report: "junit",
        output: "build/reports/unit-tests.xml"
      }
    ],
    clean: nil)
  #scan
end
desc "Submit a new Beta Build to Apple TestFlight"
desc "This will also make sure the profile is up to date"
lane :beta do
  # match(type: "appstore") # more information: https://codesigning.guide
  #gym # Build your app - more options available
  #pilot
  # sh "your_script.sh"
  # You can also use other beta testing services here (run</code>fastlane actions`)
end
desc &ldquo;Deploy a new version to the App Store&rdquo;
lane :appstore do

<h1>match(type: &ldquo;appstore&rdquo;)</h1>

  # snapshot
  #gym # Build your app - more options available
  #deliver(force: true)
  # frameit
end

<h1>You can define as many lanes as you want</h1>

after_all do |lane|
  # This block is called, only if the executed lane was successful
   slack(
     message: &ldquo;Successfully test new App Update.&rdquo;
   )
end
error do |lane, exception|
   slack(
     message: exception.message,
     success: false
   )
end
end
```
在终端输入fastlane test测试自动构建，自动测试是否成功,也可以用xtool来构建和测试工程。

<h2>fir-cli</h2></li>
<li>进入slack.com注册自己的账号，可以自己创建team，也可以加入别的team。</li>
<li>进入<a href="https://ajiosteam.slack.com/services/B0ZRJH8UU?added=1%E7%94%9F%E6%88%90SLACK_URL%E3%80%82">https://ajiosteam.slack.com/services/B0ZRJH8UU?added=1%E7%94%9F%E6%88%90SLACK_URL%E3%80%82</a></li>
<li>设置Fastfile中的slack地址。</li>
</ul>


<h2>jenkins配置</h2>

<ol>
<li>创建job</li>
<li>打开<a href="http://localhost:8080">本地</a></li>
<li>Manage Jenkins > Manage Plugins > Available 安装插件

<ul>
<li>HTML Publisher Plugin</li>
<li>AnsiColor Plugin</li>
<li>Rebuild Plugin</li>
<li>GIT Plugin</li>
</ul>
</li>
<li>上一步结束点击 Back to Dashboard > New Item > 键入Item name > 选择Freestyle project > ok</li>
<li>配置job
<code>
 Source Code Management：/Users/liuhao/Documents/gittest/LHAlertCustomView
 Branches to build：*/master
 Add build step &gt; Execute shell
 Command:
 #!/bin/bash
    source ~/.bash_profile
    cd LHAlertCustomViewDevApp/
    fastlane test
    or
    #!/bin/bash
  export LC_ALL="en_US.UTF-8"
  fastlane test
</code>

<ul>
<li>Save job</li>
</ul>
</li>
<li>自动job

<ul>
<li>Build Triggers > Build periodically
<code>
在每周的工作日的每小时的前半个小时，每过十分钟触发一次
H(0-29)/10 * * * 1-5
</code></li>
</ul>
</li>
</ol>


<h2>参考</h2>

<p><a href="https://github.com/fastlane/fastlane">fastlane</a><br/>
<a href="https://github.com/fastlane/fastlane/blob/master/docs/Jenkins.md">Jenkins Integration</a></p>

<h2>Note</h2>

<h1>error:</h1>

<p>修改文件为可读可写：
<string>&ndash;httpListenAddress=0.0.0.0</string>替换<string>&ndash;httpListenAddress=127.0.0.1</string>
sudo chmod 666  ~/Library/LaunchAgents/homebrew.mxcl.jenkins.plist</p>

<p>Mac-mini:~ dongmeiliang$ sudo chmod o-w /usr/local/Cellar/jenkins/1.643/homebrew.mxcl.jenkins.plist
Password:
Mac-mini:~ dongmeiliang$ launchctl load ~/Library/LaunchAgents/homebrew.mxcl.jenkins.plist
/usr/local/Cellar/jenkins/1.643/homebrew.mxcl.jenkins.plist: Path had bad ownership/permissions
Mac-mini:~ dongmeiliang$ sudo chmod g-w /usr/local/Cellar/jenkins/1.643/homebrew.mxcl.jenkins.plist
Mac-mini:~ dongmeiliang$ launchctl load ~/Library/LaunchAgents/homebrew.mxcl.jenkins.plist
/usr/local/Cellar/jenkins/1.643/homebrew.mxcl.jenkins.plist: service already loaded
Mac-mini:~ dongmeiliang$ sudo chmod o-w ~/Library/LaunchAgents/homebrew.mxcl.jenkins.plist
Mac-mini:~ dongmeiliang$ launchctl load ~/Library/LaunchAgents/homebrew.mxcl.jenkins.plist
/usr/local/Cellar/jenkins/1.643/homebrew.mxcl.jenkins.plist: service already loaded
Mac-mini:~ dongmeiliang$ vim ~/Library/LaunchAgents/homebrew.mxcl.jenkins.plist
Mac-mini:~ dongmeiliang$ vim /usr/local/Cellar/jenkins/1.643/homebrew.mxcl.jenkins.plist
Mac-mini:~ dongmeiliang$ clear
Mac-mini:~ dongmeiliang$ launchctl load ~/Library/LaunchAgents/homebrew.mxcl.jenkins.plist
/usr/local/Cellar/jenkins/1.643/homebrew.mxcl.jenkins.plist: service already loaded</p>

<h2>注意</h2>

<p>如果fastlane编译测试成功
但Jenkins运行编译成功测试失败并报
或者：invalid byte sequence in US-ASCII (ArgumentError)[0m</p>

<p>timeout connect(2)只是以上错误引起的。</p>

<p>可以fix错误
    export LC_ALL=&ldquo;en_US.UTF-8"写到你的shell里面</p>

<pre><code>There are two ways to fix this. You can export language settings to your shell:
</code></pre>

<p>1：不推荐，这样会修改整个系统的设置。
export LANGUAGE=en_US.UTF-8
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
or you can put this into your Gemfile:
2：推荐这个 you can put this into your Gemfile:（可以把一下代码加到你的Gemfile的头部）
if RUBY_VERSION =~ /1.9/
  Encoding.default_external = Encoding::UTF_8
  Encoding.default_internal = Encoding::UTF_8
end
提醒：可以免密码登录
The authorized_keys file corresponds to the conventional ~/.rhosts file, and has one key per line, though the lines can be very
     long.  After this, the user can log in without giving the password</p>
]]></content>
  </entry>
  
</feed>
